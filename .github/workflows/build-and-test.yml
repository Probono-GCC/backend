# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: probono-gcc-bucket
  AWS_CODE_DEPLOY_APPLICATION: probono-gcc-codedeploy-app
  AWS_CODE_DEPLOY_GROUP: probono-gcc-codedeploy-group

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
          MYSQL_DATABASE: probono_db

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew # run 키워드는 job에게 runner위에서 실행하도록 명령

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name : Run Tests with Gradle Wrapper
        run : ./gradlew test

      #test comments
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test