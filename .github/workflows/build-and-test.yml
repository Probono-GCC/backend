# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: github-actions-deploy-s3bucket
  AWS_CODE_DEPLOY_APPLICATION: Application-CodeDeploy
  AWS_CODE_DEPLOY_GROUP: Deployment-Group

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    #    services:
    #      mysql:
    #        image: mysql:8.0
    #        ports:
    #          - 3306:3306
    #        env:
    #          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #          MYSQL_DATABASE: probono_db



    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          #          host port: 3800 # Optional, default value is 3306. The port of host
          #          container port: 3307 # Optional, default value is 3306. The port of container
          #          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          #          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'probono_db' # Optional, default value is "test". The specified database which will be create
          #          mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'GCC' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

      - uses: actions/checkout@v4
      - run: touch ./src/main/resources/application-local.properties
      - run: echo "${{ secrets.APPLICATION }}" >> ./src/main/resources/application-local.properties
      - run: echo "${{ secrets.JWT_SECRET }}" >> ./src/main/resources/application-local.properties
      - run: echo "${{ secrets.ADMIN_ACCOUNT }}" >> ./src/main/resources/application-local.properties
      - run: echo "${{ secrets.LOCAL_DB_URL }}" >> ./src/main/resources/application-local.properties
      - run: cat ./src/main/resources/application-local.properties


      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew # run 키워드는 job에게 runner위에서 실행하도록 명령

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0


      - name: Run Tests with Gradle Wrapper
        run: ./gradlew test -Dspring.profiles.active=local --warning-mode=all

      #test comments
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test -Dspring.profiles.active=local --warning-mode=all --info --stacktrace
